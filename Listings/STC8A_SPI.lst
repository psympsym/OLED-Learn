C51 COMPILER V9.60.0.0   STC8A_SPI                                                         07/08/2023 09:34:39 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE STC8A_SPI
OBJECT MODULE PLACED IN .\Objects\STC8A_SPI.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE Driver\src\STC8A_SPI.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User;.\Driver\inc;
                    -.\Driver\OLED) DEBUG OBJECTEXTEND PRINT(.\Listings\STC8A_SPI.lst) OBJECT(.\Objects\STC8A_SPI.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序         */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #include "STC8A_SPI.h"
  14          
  15          u8 SPI_RxTimerOut;
  16          u8 SPI_BUF_type SPI_RxBuffer[SPI_BUF_LENTH];
  17          bit B_SPI_Busy; // 发送忙标志
  18          
  19          //========================================================================
  20          // 函数: void   SPI_Init(SPI_InitTypeDef *SPIx)
  21          // 描述: SPI初始化程序.
  22          // 参数: SPIx: 结构参数,请参考spi.h里的定义.
  23          // 返回: none.
  24          // 版本: V1.0, 2012-11-22
  25          //========================================================================
  26          void SPI_Init(SPI_InitTypeDef *SPIx)
  27          {
  28   1          if (SPIx->SPI_SSIG == ENABLE)
  29   1              SPCTL &= ~(1 << 7); // enable SS, conform Master or Slave by SS pin.
  30   1          else
  31   1              SPCTL |= (1 << 7); // disable SS, conform Master or Slave by SPI_Mode.
  32   1          SPI_Start(SPIx->SPI_Enable);
  33   1          SPI_FirstBit_Set(SPIx->SPI_FirstBit);
  34   1          SPI_Mode_Set(SPIx->SPI_Mode);
  35   1          SPI_CPOL_Set(SPIx->SPI_CPOL);
  36   1          SPI_CPHA_Set(SPIx->SPI_CPHA);
  37   1          SPI_Clock_Select(SPIx->SPI_Speed);
  38   1      
  39   1          SPI_RxTimerOut = 0;
  40   1          B_SPI_Busy = 0;
  41   1      }
  42          
  43          //========================================================================
  44          // 函数: void   SPI_SetMode(u8 mode)
  45          // 描述: SPI设置主从模式函数.
  46          // 参数: mode: 指定模式, 取值 SPI_Mode_Master 或 SPI_Mode_Slave.
  47          // 返回: none.
  48          // 版本: V1.0, 2012-11-22
  49          //========================================================================
  50          void SPI_SetMode(u8 mode)
  51          {
  52   1          if (mode == SPI_Mode_Slave)
  53   1          {
  54   2              SPCTL &= ~(1 << 4); // 重新设置为从机待机
C51 COMPILER V9.60.0.0   STC8A_SPI                                                         07/08/2023 09:34:39 PAGE 2   

  55   2              SPCTL &= ~(1 << 7); // SS引脚确定主从
  56   2          }
  57   1          else
  58   1          {
  59   2              SPCTL |= (1 << 4); // 使能 SPI 主机模式
  60   2              SPCTL |= (1 << 7); // 忽略SS引脚功能
  61   2          }
  62   1      }
  63          
  64          //========================================================================
  65          // 函数: void SPI_WriteByte(u8 dat)
  66          // 描述: SPI发送一个字节数据.
  67          // 参数: dat: 要发送的数据.
  68          // 返回: none.
  69          // 版本: V1.0, 2020-09-14
  70          //========================================================================
  71          void SPI_WriteByte(u8 dat) // SPI发送一个字节数据
  72          {
  73   1          SPDAT = dat;
  74   1          B_SPI_Busy = 1;
  75   1          while (B_SPI_Busy)
  76   1              ;
  77   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    151    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    128    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
